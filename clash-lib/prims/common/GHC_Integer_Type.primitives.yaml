- BlackBox:
    name: GHC.Integer.Type.plusInteger
    kind: Expression
    type: 'plusInteger ::
      Integer -> Integer -> Integer'
    template: ~ARG[0] + ~ARG[1]
    warning: 'GHC.Integer.Type.plusInteger: Integers are dynamically sized in simulation,
      but fixed-length after synthesis. Use carefully.'
- BlackBox:
    name: GHC.Integer.Type.minusInteger
    kind: Expression
    type: 'minusInteger ::
      Integer -> Integer -> Integer'
    template: ~ARG[0] - ~ARG[1]
    warning: 'GHC.Integer.Type.minusInteger: Integers are dynamically sized in simulation,
      but fixed-length after synthesis. Use carefully.'
- BlackBox:
    name: GHC.Integer.Type.leInteger
    kind: Expression
    type: 'leInteger :: Integer
      -> Integer -> Bool'
    template: ~ARG[0] <= ~ARG[1]
    warning: 'GHC.Integer.Type.leInteger: Integers are dynamically sized in simulation,
      but fixed-length after synthesis. Use carefully.'
- BlackBox:
    name: GHC.Integer.Type.gtInteger
    kind: Expression
    type: 'gtInteger :: Integer
      -> Integer -> Bool'
    template: ~ARG[0] > ~ARG[1]
    warning: 'GHC.Integer.Type.gtInteger: Integers are dynamically sized in simulation,
      but fixed-length after synthesis. Use carefully.'
- BlackBox:
    name: GHC.Integer.Type.ltInteger
    kind: Expression
    type: 'ltInteger :: Integer
      -> Integer -> Bool'
    template: ~ARG[0] < ~ARG[1]
    warning: 'GHC.Integer.Type.ltInteger: Integers are dynamically sized in simulation,
      but fixed-length after synthesis. Use carefully.'
- BlackBox:
    name: GHC.Integer.Type.geInteger
    kind: Expression
    type: 'geInteger :: Integer
      -> Integer -> Bool'
    template: ~ARG[0] >= ~ARG[1]
    warning: 'GHC.Integer.Type.geInteger: Integers are dynamically sized in simulation,
      but fixed-length after synthesis. Use carefully.'
